# Задача №39.
# Даны два массива чисел. Требуется вывести те элементы
# первого массива (в том порядке, в каком они идут в первом
# массиве), которых нет во втором массиве. Пользователь вводит
# число N - количество элементов в первом массиве, затем N
# чисел - элементы массива. Затем число M - количество
# элементов во втором массиве. Затем элементы второго массива
# Ввод
# 3 1 3 4 2 4 12
# 4 15 43 1 15 1
# Вывод
# 3 3 2 12

import random

# # TODO

# def input_list():
#     len = int(input('Введите длину первого массива: '))
#     list =[]
#     for i in range(len):
#         list.append(int(input('Введите элемент массива: ')))
#     return list

# def Compare(list1, list2):
#     for i in list1:
#         temp = num
#         if num in list2:
#             list1.pop(num)
#             num = list1[i]
#     return list1

# list1 = input_list()
# list2 = input_list()
# print(list1)
# print(list2)
# print('Изменённый массив')
# print(Compare(list1, list2))




# Задача №41.
# Дан массив, состоящий из целых чисел. Напишите
# программу, которая в данном массиве определит
# количество элементов, у которых два соседних и, при
# этом, оба соседних элемента меньше данного. Сначала
# вводится число N — количество элементов в массиве
# Далее записаны N чисел — элементы массива. Массив
# состоит из целых чисел.
# Ввод: Ввод:
# 5 
# 1 2 3 4 5 
# 5
# 1 5 1 5 1
# Вывод:
# 0
# Вывод:
# 2
# (каждое число вводится с новой строки)

# def input_list():
#     len = int(input('Введите длину списка: '))
#     list = []
#     for i in range(len):
#         list.append(int(input('Введите элемент списка: ')))
#     return list

# def Search(list):
#     count = 0
#     for i in range(1, len(list)):
#         if list[i] > list[i - 1] and list[i] > list[i + 1]:
#             count += 1
#     return count

# list = input_list()
# print(Search(list))

# Задача №43.
# Дан список чисел. Посчитайте, сколько в нем пар
# элементов, равных друг другу. Считается, что любые
# два элемента, равные друг другу образуют одну пару,
# которую необходимо посчитать. Вводится список
# чисел. Все числа списка находятся на разных
# строках.
# Ввод: Вывод:
# 1 2 3 2 3 2

# list = [1, 2, 3, 2, 3, 2]
# count = 0
# newList = []

# for num in range(len(list)):
#     if list[num] in newList:
#         count += 1
#         newList.remove(list[num])
#     else:
#         newList.append(list[num])

# print(count)


# Задача №45.
# Два различных натуральных числа n и m называются
# дружественными, если сумма делителей числа n
# (включая 1, но исключая само n) равна числу m и
# наоборот. Например, 220 и 284 – дружественные числа.
# По данному числу k выведите все пары дружественных
# чисел, каждое из которых не превосходит k. Программа
# получает на вход одно натуральное число k, не
# превосходящее 105
# . Программа должна вывести все
# пары дружественных чисел, каждое из которых не
# превосходит k. Пары необходимо выводить по одной в
# строке, разделяя пробелами. Каждая пара должна быть
# выведена только один раз (перестановка чисел новую
# пару не дает).
# Ввод: Вывод:
# 300 220 284

# сумма делителей, например 15: 1 + 3 +5 = 9
def sum_of_dividers(num):
    sum = 1 # любое число делится на 1, поэтому сумма начинается с 1
    for i in range(2, num // 2 + 1):
        if num % i == 0:
            sum += i
    return sum

k = int(input('Input the enf of the range: '))

for i in range(2, k):
    partner = sum_of_dividers(i)
    if i == sum_of_dividers(partner) and i < partner: # игнорируем дублирующиеся пары
        print(f'{i} - {partner}')


